matrix:
  allow_failures:
    - compiler: clang
  include:
    # linux
    - compiler: gcc
      language: cpp
      env: testenv="linux gcc" myos=linux
      script:
        - echo | g++ -dM -E - #echo predefined variables
        - cmake -DSH2_DYNAREC=OFF -DYAB_WERROR=ON -DYAB_FORCE_SECURE_STRINGS=ON ..
        - make
    - compiler: gcc
      language: cpp
      env: testenv="mingw-w64 windows cross compile, libyabause only" myos=winx64
      addons:
        apt:
          packages:
            - gcc-mingw-w64-x86-64
            - g++-mingw-w64-x86-64
            - binutils-mingw-w64-x86-64
            - mingw-w64-x86-64-dev
      script:
        - echo 'SET(CMAKE_SYSTEM_NAME Windows)' > toolchain.cmake
        - echo 'SET(CMAKE_C_COMPILER   x86_64-w64-mingw32-gcc)' >> toolchain.cmake
        - echo 'SET(CMAKE_CXX_COMPILER x86_64-w64-mingw32-g++)' >> toolchain.cmake
        - echo 'SET(CMAKE_RC_COMPILER x86_64-w64-mingw32-windres)' >> toolchain.cmake
        - cmake -DSH2_DYNAREC=OFF -DYAB_WERROR=ON -DYAB_FORCE_SECURE_STRINGS=ON -DCMAKE_TOOLCHAIN_FILE=toolchain.cmake -DYAB_PORTS= ..
        - make
    - compiler: clang
      language: android
      env: testenv="android port" myos=android
      jdk: oraclejdk8
      addons:
        apt:
          sources:
            - llvm-toolchain-trusty-5.0
          packages:
            - clang-5.0
      android:
        components:
          - tools
          - platform-tools
          - build-tools-24.0.3
          - android-24
      script:
        - wget http://dl.google.com/android/repository/android-ndk-r11c-linux-x86_64.zip
        - unzip -q android-ndk-r11c-linux-x86_64.zip
        - export ANDROID_NDK_HOME=$(pwd)/android-ndk-r11c/
        - cmake -DSH2_DYNAREC=OFF -DYAB_WERROR=ON -DYAB_FORCE_SECURE_STRINGS=ON -DCMAKE_BUILD_TYPE=Release -DCMAKE_TOOLCHAIN_FILE=../src/android/armeabi.cmake -DYAB_PORTS=android ..
        - make
    # osx
    - env:
        - testenv="os x cross ios" myos=ios myarch=armv
      os: osx
      xcode_sdk: iphonesimulator11.4
      compiler: clang
    - env:
        - testenv="os x cross ios 7+" myos=ios7 myos=ios myarch=arm64
      os: osx
      xcode_sdk: iphonesimulator11.4
      compiler: clang
    - env: testenv="os x cocoa port" myos=mac
      os: osx
      compiler: clang
      script:
        - cd ../src
        - echo 'INCLUDE_DIRECTORIES("/opt/X11/include")' > temp.txt
        - echo 'LINK_DIRECTORIES("/opt/X11/lib")' >> temp.txt
        - cat temp.txt CMakeLists.txt > temp2.txt
        - rm CMakeLists.txt
        - mv temp2.txt CMakeLists.txt
        - cd ../build
        - cmake -DSH2_DYNAREC=OFF -DCMAKE_BUILD_TYPE=Release ..
        - make
    - os: osx
      env: testenv="os x qt port" myos=macqt
      compiler: clang
      script:
        - brew install qt5 sdl2
        - cmake -DSH2_DYNAREC=OFF -DCMAKE_PREFIX_PATH=/usr/local/Cellar/qt5/5.3.2 -DYAB_PORTS=qt -DCMAKE_BUILD_TYPE=Release ..
        - make
env:
  global:
    # The next declaration is the encrypted COVERITY_SCAN_TOKEN, created
    # via the "travis encrypt" command using the project repo's public key
    - secure: sopS90ts/MzipWazyLIeLtDkSWZyV9HeMfR8mIglxWuo76T/mOCT0m4fFPRQeJ1OHO3hWMbpYzKt357B/gwcpbq1/MTm6l+mhkxTKGBmrLpT9bz3GfQcQG3UgtOBp5bgUFc0xB2geN5BYrNCiKExmuMqTFByMKvIjiRWzwiCJflc74iNHTzS4j3y/wfRypnhJ8HIyU9YSwB43QzvtvmwgHRNcQ8Z7Hsto4qs4anEM4fnKWD5yyD+sFFnZIaCtDLXcKAi8HY0ILf2jxO5SLxzv0R9tyBkbXLaaSVfHWR3NOFMJtT4vq1v+XzcD2p1c9PxsxmIsOK2TLpYEx7sCmddO5zSs884turwu1ZDT/1pUQODSaxVpCRlE+NVDoUl6tqa3DGW1rIxzp/NjRzo4WEP2+fAvPVQSKG8l7GuHhgY1m8D0lHesaNXFr6D6hiKDEmMc1/nVKW8ohMPQxC1/g7tfM61zCkDcwc5CEtB6lNxEr3Db1M1u7X0pOCbPTgt0mNJcpGlNNDRnjh4gb+gXmFMAsJKTSy4/i4ExhMvTQqUp9LA7Bu0SdCT74rH5wS2oPw65aiijFDdaItk1ZapASphwzVV4IoKMQ7/6ZWEHccLZQ63a4hSSFD0upn5qcAhGlZwdUc4wYRFayUo5pzxYbui9Zlv/XxYEC5K8vI4EunmcBw=
addons:
  coverity_scan:
    project:
      name: b23prodtm/yabause
      description: Build submitted via Travis CI
    notification_email: b23prodtm@gmail.com
    build_command: make
    branch_pattern: coverity_scan
language: objective-c
sudo: false
before_install:
- if ([[ "${TRAVIS_JOB_NUMBER##*.}" != "1" ]] && [[ "${TRAVIS_BRANCH}" == "coverity_scan" ]]); then false ; fi
- if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew update; fi
- if [[ "$TRAVIS_OS_NAME" == "osx" ]]; then brew install doxygen zlib; fi
- cd yabause
- mkdir build
- cd build
script:
  #- echo | g++ -dM -E - #echo predefined variables
  - cd ../build
  #- cmake -DSH2_DYNAREC=OFF -DIOS_ARCH=${myarch} -DCMAKE_TOOLCHAIN_FILE=platforms/ios/cmake/Toolchains/Toolchain-iPhoneSimulator_Xcode.cmake -DYAB_PORTS= -DCMAKE_BUILD_TYPE=Release ..
  - cmake -DSH2_DYNAREC=OFF -DIOS_ARCH=${myarch} -DYAB_PORTS= -DCMAKE_BUILD_TYPE=Release ..
  - make
after_success:
  - cpack -G ZIP -D CPACK_PACKAGE_FILE_NAME=yabause-v${GIT_RELEASE_VERSION}.${TRAVIS_BUILD_NUMBER}-${myos}
  - git config --local user.name ${GIT_USER}
  - git config --local user.email ${GIT_MAIL}
  - git tag "v${GIT_RELEASE_VERSION}.${TRAVIS_BUILD_NUMBER}"
deploy:
  provider: releases
  api_key:
    secure: oYQp54i5P9hs27pWaBuhgvVQGnLi7bVxoErINkP1Iu0PPv6jfq9YVS+MvbWi8+VWBrV7F1l+6xe9jeA41P+9y9+KnIgoO9+57H28Apgr9+yrbt/JqtM2o56Yrrpl9PJPaG82aBT5kRMxvPBHpWP0p3aCOcTt9oNM3AEipbyiS1bcA02l7CEqPtVh19gO79jqxXTainkdmFChRVYhlnbIIuSleGuBrtbnnUfwiZ94anqj4hOz+A9EyWIa/FtC2J3s4dV6USXoiiuGuw2ekvXI6YfQyTOdtmWLqmp+LAHdOvnSKMP10JBKy1Vi4EJ8RHt0X160wBLPXsN0mngx1OmPAWwfrBgZ5eu187w1GKQHMHk4/l4exVqNhW3t8mSNMwdCBu80mF3HL/qWfkdKiA1Ryeq/t18usMLNCKRcKgeQ3OsigZSTvDZMg7xLSNOkcZ/XpURR0RABvhUMkRLdsrsnKs8DdLo++dTHWPr01hWXucq+cp3LYtuRLMmJrzzTZbNC7vUC1gnEtypZQ98B92B5hn9hO/+BpY+k1csYPtgPJMofOqliWs79YNe6HsctH4WnEJKXaPWRPse16PzPTT4ENjHZRV407erqvjx56i79BbE44caXHZA0kwQkhxD9WTfvvS+3Bm71BuNs73pV2D+NHNGEy5uJmMeQCrBXo4dghFc=
  file_glob: true
  file: 'yabause-v${GIT_RELEASE_VERSION}.${TRAVIS_BUILD_NUMBER}*'
  skip_cleanup: true
  on:
    repo: b23prodtm/yabause
    branch: feature/*
